.testContainer-slider {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  //background-color: pink;
  display: flex;
  justify-content: center;
  pointer-events: none;
}

/*
width: 100% * x
>100% --> strokeW: 20 - 20 * 1/x // r: 40 + 20 * 1/x *1/2 
<100% --> strokeW: 20 + 20 * x // r: 40 - 20 * x *1/2
*/

#radial-slider-container-0 {
  position: absolute;
  top: 0;
  width: 70%;
  transform: translateY(-50%);

  .radial-slider-path {
    stroke-width: 32;
    r: 34;
  }

  // for the upside down selectors
  .radial-slider-valueDisp {
    margin-top: 1rem;
  }
}

#radial-slider-container-1 {
  position: absolute;
  top: 0;
  width: 130%;
  transform: translateY(-50%);

  .radial-slider-path {
    stroke-width: 17;
    r: 41.5;
  }

  // for the upside down selectors
  .radial-slider-valueDisp {
    margin-top: 1rem;
  }
}

#radial-slider-container-2 {
  position: absolute;
  top: 0;
  width: 190%;
  transform: translateY(-50%);

  .radial-slider-path {
    stroke-width: 11.5;
    r: 44.25;
  }

  // for the upside down selectors
  .radial-slider-valueDisp {
    margin-top: 1rem;
  }
}

#radial-slider-container-3 {
  position: absolute;
  bottom: 0;
  width: 120%;
  transform: translateY(50%);

  .radial-slider-path {
    stroke-width: 18;
    r: 41;
  }
}

.radial-slider-container {
  display: flex;
  align-items: center;
  justify-content: center;
  /*makes the elements invisble to click events, only the stroke will be set to be interactable*/
  pointer-events: none;
}

.radial-slider-valueDisp-container {
  position: absolute;
  z-index: 5;
  height: 100%;
  transform: rotateZ(0);
}

.radial-slider-valueDisp {
  user-select: none;
  color: var(--primary-color);
  font-size: 4rem;
  transform: rotateX(0);
  margin-top: 1.5rem;
}

.radial-slider-svg {
  /*background-color: green;*/
  /*transform: scaleY(1) rotateX(180deg) rotateZ(90deg);*/
  transform: rotateZ(90deg);
}

.radial-slider-path {
  stroke: var(--secondary-color);
  stroke-dasharray: 25;
  stroke-dashoffset: 200;
  fill: none;
  stroke-linecap: round;
  /*enable it to detect mouse/touch events: slider stacking possible*/
  pointer-events: stroke;
}

/*@keyframes dash {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: 26.482;
  }
}*/

// page enter  -----------------------------------------

.enter-SettingsPage-slider-animation {
  animation: enter-SettingsPage-slider 1.5s ease-out;
  @keyframes enter-SettingsPage-slider {
    from {
      stroke-dashoffset: 250;
      //stroke: black;
    }
    to {
      //stroke-dashoffset: 200;
      //stroke: pink;
    }
  }
}

.enter-SettingsPage-valueDisp-animation {
  animation: enter-SettingsPage-valueDisp 1.5s ease-out;
  @keyframes enter-SettingsPage-valueDisp {
    from {
      transform: rotateZ(-300deg);
      //stroke: black;
    }
    to {
    }
  }
}

.enter-SettingsPage-valueDisp-animation-upsideDown {
  animation: enter-SettingsPage-valueDisp-upsideDown 1.5s ease-out;
  @keyframes enter-SettingsPage-valueDisp-upsideDown {
    from {
      transform: rotateZ(30deg);
      //stroke: black;
    }
    to {
    }
  }
}

// page leave -------------------------------------

.leave-SettingsPage-slider-animation {
  animation: leave-SettingsPage-slider 0.8s ease-in;
  @keyframes leave-SettingsPage-slider {
    from {
      //stroke: black;
    }
    to {
      stroke-dashoffset: 250;
      //stroke-dashoffset: 200;
      //stroke: pink;
    }
  }
}

.leave-SettingsPage-valueDisp-animation {
  animation: leave-SettingsPage-valueDisp 0.8s ease-in;
  @keyframes leave-SettingsPage-valueDisp {
    from {
      //stroke: black;
    }
    to {
      transform: rotateZ(-300deg);
    }
  }
}

.leave-SettingsPage-valueDisp-animation-upsideDown {
  animation: leave-SettingsPage-valueDisp-upsideDown 0.8s ease-in;
  @keyframes leave-SettingsPage-valueDisp-upsideDown {
    from {
      //stroke: black;
    }
    to {
      transform: rotateZ(30deg);
    }
  }
}
